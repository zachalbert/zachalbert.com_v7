/* The positioning of the shadow on the planet. 0%/100% are the furthest away, 25% left, 50% closest, 75% right */
@mixin lightStates( $diameter ) {

  /* 0% begins behind the sun */
  0% {
    transform: translate( 0, ( $diameter / 30 ) ) scale( 1, 1 );
  }
  15% {
    transform: translate( ( $diameter / 15 ), ( $diameter / 25 ) ) scale( 0.9, 1.3 );
  }
  25% {
    transform: translate( ( $diameter / 4 ), 0 ) scale( 0.5, 3 );
  }
  40% {
    transform: translate( 0, 0 ) scale( 1.2, 1.2 );
  }
  60% {
    transform: translate( 0, 0 ) scale( 1.2, 1.2 );
  }
  75% {
    transform: translate( ( -$diameter / 4 ), 0 ) scale( 0.5, 3 );
  }
  85% {
    transform: translate( ( -$diameter / 15 ), ( $diameter / 25 ) ) scale( 0.9, 1.3 );
  }
  100% {
    transform: translate( 0, ( $diameter / 30 ) ) scale( 1, 1 );
  }
}

@keyframes light-mercury { @include lightStates( planet( $solarSystem, mercury, diameter ) ); }
@keyframes light-venus   { @include lightStates( planet( $solarSystem, venus, diameter ) ); }
@keyframes light-earth   { @include lightStates( planet( $solarSystem, earth, diameter ) ); }
@keyframes light-mars    { @include lightStates( planet( $solarSystem, mars, diameter ) ); }
@keyframes light-jupiter { @include lightStates( planet( $solarSystem, jupiter, diameter ) ); }
@keyframes light-saturn  { @include lightStates( planet( $solarSystem, saturn, diameter ) ); }
@keyframes light-uranus  { @include lightStates( planet( $solarSystem, uranus, diameter ) ); }
@keyframes light-neptune { @include lightStates( planet( $solarSystem, neptune, diameter ) ); }
@keyframes light-pluto   { @include lightStates( planet( $solarSystem, pluto, diameter ) ); }
