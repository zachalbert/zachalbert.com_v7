/* Planet construction */

/* Loop through all the planets and initialize them */
@each $planet, $props in $solarSystem {
  @if( $planet != 'sun' ) {
    $i:               planet( $solarSystem, #{$planet}, id );

    $diameter:        planet( $solarSystem, #{$planet}, diameter );
    $symbolOffset:    planet( $solarSystem, #{$planet}, symbolOffset );
    $orbitDiameter:   planet( $solarSystem, #{$planet}, orbitDiameter );
    $orbitSpeed:      planet( $solarSystem, #{$planet}, speed );

    $startOffset:     planet( $solarSystem, #{$planet}, start );
    $offset:          $startOffset / 360deg;
    $delay:           -($orbitSpeed - ($orbitSpeed * $offset));

    @if $syncPlanets == true {
      $orbitSpeed: 20s; /* Sync orbital periods, for dev purposes */
    }

    .#{$planet} {

      &.orbit,
      .pos {
        animation-duration: $orbitSpeed;
      }

      .pos {
        animation-name: invert-#{$planet};
      }

      &.orbit {
        animation-name: orbit-#{$planet};
        top: 50%;
        width: $orbitDiameter;
        height: $orbitDiameter;
        margin-top: -($orbitDiameter / 2);
        margin-left: -($orbitDiameter / 2);

        /* Ground shadow */
        &:after {
          width: $diameter * 0.85;
          height: $diameter * 1.35;
        }
      }

      .planet {
        font-size: $diameter;
        animation-name: lighting;
        animation-duration: $orbitSpeed;
        animation-delay: $delay;
        animation-iteration-count: infinite;
        animation-timing-function: linear;

        .light-side {
          animation-name: light-#{$planet};
          animation-duration: $orbitSpeed;
          animation-delay: $delay;
        }

        .dark-side {
          animation-name: dark-#{$planet};
          animation-duration: $orbitSpeed;
          animation-delay: $delay;
        }

        .lighting {
          width: 100%;
          height: 100%;

          circle {
            position: absolute;
            width: 100%;
            height: 100%;
          }

          &.dark circle {
            fill: purple;
          }

          &.light circle {
            fill: cyan;
          }
        }
      }

      .symbol {
        top: -2.5em;
      }
    }
  }
}

.planet {
  position: relative;
  left: 50%;
  width: 1em;
  height: 1em;
  margin-top: 0;
  margin-left: -0.5em;
  border-radius: 50%;
  background-color: $planetShadow;
  border: $planetBorder;
  overflow: hidden;
  transform-style: preserve-3d;

  &.sun {
    background-color: $planetColor;
    border: none;
    font-size: planet($solarSystem, sun, diameter);
    transform: rotateX(-$viewingAngle);
    top: 50%;
  }

  .light-side {
    background: $planetColor;
    border: $lightSideBorder;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    position: absolute;
    left: 50%;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
    transform-style: preserve-3d;
  }

  .dark-side {
    background: $planetShadow;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    position: absolute;
    left: -50%;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
    transform-style: preserve-3d;
  }
}

.symbol {
  font-family: 'Open Sans', sans-serif;
  opacity: 0;
  color: $symbolColor;
  position: absolute;
  text-align: center;
  font-size: 1em;
  left: 50%;
  background: $symbolColorBG;
  border: 2px solid $symbolColorBorder;
  padding: 0.2em 0;
  line-height: 1;
  width: 1.5em;
  margin-left: -0.75em;
  text-align: center;
  border-radius: 50%;

  &:before {
    content: '';
    display: block;
    position: absolute;
    bottom: -5px;
    left: 50%;
    margin-left: -4px;
    width: 0;
    height: 0;
    border-left: 4px solid transparent;
    border-right: 4px solid transparent;
    border-top: 6px solid $symbolColorBorder;
  }
  &:after {
    content: '';
    display: block;
    position: absolute;
    bottom: -4px;
    left: 50%;
    margin-left: -2px;
    width: 0;
    height: 0;
    border-left: 2px solid transparent;
    border-right: 2px solid transparent;
    border-top: 4px solid $symbolColorBG;
  }
}

.sun .symbol {
  margin-top: ( planet( $solarSystem, sun, diameter ) ) / 3.25;
  font-size: 1.5rem;

  &:before,
  &:after {
    content: none;
  }
}

/* Call out a planet by adding .callout to its .orbit */
.orbit.callout {
  .planet {
    background: #47b3ff;
  }
  .light-side {
    background: #56e0ff;
    border: none;
  }
}
